import{ai as s,aj as r,c8 as l,fM as c,al as d,fN as y,cd as E,ce as m,c6 as v,fO as I,fP as w}from"./index-4b03b1b0.js";var u;let i=u=class extends l{constructor(e){super(e)}async collectRequiredFields(e,t){return c(e,t,this.expression)}clone(){return new u({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};s([r({type:String,json:{write:!0}})],i.prototype,"expression",void 0),s([r({type:String,json:{write:!0}})],i.prototype,"title",void 0),i=u=s([d("esri.layers.support.FeatureExpressionInfo")],i);const p=i;var a;const n=y()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),f=new E({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let o=a=class extends l{constructor(e){super(e),this.offset=null}readFeatureExpressionInfo(e,t){return e??(t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0)}writeFeatureExpressionInfo(e,t,x,h){t[x]=e.write({},h),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new a({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&w(this.featureExpressionInfo,e.featureExpressionInfo)}};s([r({type:p,json:{write:!0}})],o.prototype,"featureExpressionInfo",void 0),s([m("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],o.prototype,"readFeatureExpressionInfo",null),s([v("featureExpressionInfo",{featureExpressionInfo:{type:p},"featureExpression.value":{type:[0]}})],o.prototype,"writeFeatureExpressionInfo",null),s([r({type:n.apiValues,nonNullable:!0,json:{type:n.jsonValues,read:n.read,write:{writer:n.write,isRequired:!0}}})],o.prototype,"mode",null),s([r({type:Number,json:{write:!0}})],o.prototype,"offset",void 0),s([r({type:I,json:{type:String,read:f.read,write:f.write}})],o.prototype,"unit",null),o=a=s([d("esri.layers.support.ElevationInfo")],o);const j=o;export{j as h};
