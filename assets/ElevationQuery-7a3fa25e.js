import{gu as U,aq as d,cR as q,cS as I,gv as L,dv as Q,gw as O,bm as D,e$ as E,cn as V,eV as W,gx as P,dt as H,cu as X,bZ as R,bY as Y,bX as $,gy as k}from"./index-4b03b1b0.js";class G{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new U(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:s,dy:l,y1:o,x0:a}=this._samplerData,{width:r,values:c,noDataValue:f}=n,p=Z(l*(o-t),0,i),u=Z(s*(e-a),0,i),T=Math.floor(p),C=Math.floor(u),g=T*r+C,F=g+r,w=c[g],_=c[F],M=c[g+1],S=c[F+1];if(w!==f&&_!==f&&M!==f&&S!==f){const b=u-C,z=w+(M-w)*b;return z+(_+(S-_)*b-z)*(p-T)}}}function Z(h,e,t){return h<e?e:h>t?t:h}class ee{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=y.fromGeometry(t);let s=!1;i&&i.returnSampleInfo||(s=!0);const l={...x,...i,returnSampleInfo:!0},o=await this.query(e[e.length-1],n,l),a=await this._queryAllContinue(e,o,l);return a.geometry=a.geometry.export(),s&&delete a.sampleInfo,a}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...x,...i},s=new B(e,t.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(s,t,l),await this._selectTiles(s,l),await this._populateElevationTiles(s,l),this._sampleGeometryWithElevation(s),this._createQueryResult(s,l)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...x,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(l=>l.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...x,...i,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,s,n)}async _createSampler(e,t,i,n){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,o=e.tileInfo.spatialReference;l.equals(o)||(await q([{source:l,dest:o}],{signal:s}),t=I(t,o));const a=new J(e,t,i,n);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new L(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.map(r=>Q(r.extent)),l=await this._createSampler(e[e.length-1],t,n,s);if(l.samplers.length===0)return i;const o=i.samplers.concat(l.samplers),a=new L(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,i){const n=e.pop(),s=t.geometry.coordinates,l=t.sampleInfo;O(l);const o=[],a=[];for(let p=0;p<s.length;p++){const u=l[p];u.demResolution>=0?u.source||(u.source=n):e.length&&(o.push(s[p]),a.push(p))}if(!e.length||o.length===0)return t;const r=t.geometry.clone(o),c=await this.query(e[e.length-1],r,i),f=c.sampleInfo;if(!f)throw new Error("no sampleInfo");return a.forEach((p,u)=>{s[p].z=c.geometry.coordinates[u].z,l[p].demResolution=f[u].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i=await e.geometry.project(e.outSpatialReference,t);O(i);const n={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(s=>{s.tile=null,s.elevationTile=null}),n}async _createGeometryDescriptor(e,t,i){let n;const s=e.layer.tileInfo.spatialReference;if(t instanceof y?n=await t.project(s,i):(await q([{source:t.spatialReference,dest:s}],{signal:i}),n=I(t,s)),!n)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=y.fromGeometry(n)}async _selectTiles(e,t){e.type==="geometry"&&this._preselectOutsideLayerExtent(e);const i=e.options.demResolution;if(typeof i=="number")this._selectTilesClosestResolution(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(e.layer.fullExtent==null)return;const t=new G(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(n=>{const s=n.x,l=n.y;(s<i.xmin||s>i.xmax||l<i.ymin||l>i.ymax)&&(n.elevationTile=t)})}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,s=t/D(i.spatialReference),l=v(i,n);let o=l[0],a=0;for(let r=1;r<l.length;r++){const c=l[r];Math.abs(c.resolution-s)<Math.abs(o.resolution-s)&&(o=c,a=r)}return a}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,s=N(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const s=n.tilemapCache,l=e.getTilesToFetch();try{if(s&&!A(s))await E(Promise.all(l.map(o=>s.fetchAvailability(o.level,o.row,o.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(o){V(o),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),n={},s=e.options.cache,l=e.options.noDataValue,o=i.map(async a=>{if(a.id==null)return;const r=`${e.layer.uid}:${a.id}:${l}`,c=s!=null?s.get(r):null,f=c??await e.layer.fetchTile(a.level,a.row,a.col,{noDataValue:l,signal:t});s!=null&&s.put(r,f),n[a.id]=new G(a,f)});await E(W(o),t),e.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i||A(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),s={},l=n.map(async o=>{const a=new P(null,0,0,0,H()),r=await X(i.fetchAvailabilityUpsample(o.level,o.row,o.col,a,{signal:t}));r.ok!==!1?o.id!=null&&(s[o.id]=a):V(r.error)});await E(Promise.all(l),t),e.remapTiles(s)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},s=a=>{a.id!=null&&(a.id in n?n[a.id]++:(n[a.id]=1,i++))},l=a=>{if(a.id==null)return;const r=n[a.id];r===1?(delete n[a.id],i--):n[a.id]=r-1};e.forEachTileToFetch(s,l);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch(a=>{i<=e.options.maximumAutoTileRequests||(l(a),t.upsampleTile(a)&&(o=!0),s(a))},l),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=N(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((s,l)=>{i.upsampleTile(s)?n=!0:l()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const s=i.sample(t.x,t.y);s!=null?n=s:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=D(t.spatialReference);return e.geometry.coordinates.map(n=>{let s=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(s=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:s}})}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await q([{source:this.spatialReference,dest:e}],{signal:t});const i=new R({spatialReference:this.spatialReference,points:this.coordinates.map(o=>[o.x,o.y])}),n=I(i,e);if(!n)return null;const s=this.coordinates.map((o,a)=>{const r=o.clone(),c=n.points[a];return r.x=c[0],r.y=c[1],r}),l=this.clone(s);return l.spatialReference=e,l}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const s=e.clone(i);return s.spatialReference=n,s};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?[new m(i.x,i.y,i.z,i.m)]:n?[new m(i.x,i.y,i.z)]:s?[new m(i.x,i.y,null,i.m)]:[new m(i.x,i.y)],t._exporter=(l,o)=>e.hasM?new $(l[0].x,l[0].y,l[0].z,l[0].m,o):new $(l[0].x,l[0].y,l[0].z,o);break}case"multipoint":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?i.points.map(l=>new m(l[0],l[1],l[2],l[3])):n?i.points.map(l=>new m(l[0],l[1],l[2])):s?i.points.map(l=>new m(l[0],l[1],null,l[2])):i.points.map(l=>new m(l[0],l[1])),t._exporter=(l,o)=>e.hasM?new R({points:l.map(a=>[a.x,a.y,a.z,a.m]),hasZ:!0,hasM:!0,spatiaReference:o}):new R(l.map(a=>[a.x,a.y,a.z]),o);break}case"polyline":{const i=e,n=[],s=[],{hasZ:l,hasM:o}=e;let a=0;for(const r of i.paths)if(s.push([a,a+r.length]),a+=r.length,l&&o)for(const c of r)n.push(new m(c[0],c[1],c[2],c[3]));else if(l)for(const c of r)n.push(new m(c[0],c[1],c[2]));else if(o)for(const c of r)n.push(new m(c[0],c[1],null,c[2]));else for(const c of r)n.push(new m(c[0],c[1]));t.coordinates=n,t._exporter=(r,c)=>{const f=e.hasM?r.map(u=>[u.x,u.y,u.z,u.m]):r.map(u=>[u.x,u.y,u.z]),p=s.map(u=>f.slice(u[0],u[1]));return new Y({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:c})};break}}return t}}class m{constructor(e,t,i=null,n=null,s=null,l=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=s,this.elevationTile=l}clone(){return new m(this.x,this.y,this.z,this.m)}}class j{constructor(e,t){this.layer=e,this.options=t}}class B extends j{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=v(t,i)[e].level;this.geometry.coordinates.forEach(s=>s.tile=t.tileAt(n,s.x,s.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const s=n.tile;if(!s)continue;const l=(i=n.tile)==null?void 0:i.id;n.elevationTile||!l||e[l]||(e[l]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class J extends j{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=v(t,i);if(!e)return n.length-1;const s=this.extent;if(s==null)return-1;for(let l=n.length-1;l>=0;l--){const o=n[l],a=o.resolution*t.size[0],r=o.resolution*t.size[1];if(Math.ceil(s.width/a)*Math.ceil(s.height/r)<=e)return l}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let s=!1;e(n,()=>s=!0),s?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const l of e){const o=l.id;o&&!i[o]?(i[o]=l,n.push(l)):t&&t(l)}const s=n.sort((l,o)=>l.level-o.level);return s.filter((l,o)=>{for(let a=0;a<o;a++){const r=s[a].extent;if(r&&l.extent&&k(r,l.extent))return t&&t(l),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,s=v(i,n)[e],l=i.tileAt(s.level,t.xmin,t.ymin),o=l.extent;if(o==null)return;const a=s.resolution*i.size[0],r=s.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),f=Math.ceil((t.ymax-o[1])/r);for(let p=0;p<f;p++)for(let u=0;u<c;u++){const T=new P(null,l.level,l.row-p,l.col+u);i.updateTileInfo(T),this._tileIsMasked(T)||this._candidateTiles.push(T)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&k(t,e.extent))}}function N(h,e,t=0){const i=v(h,e);let n=i.length-1;if(t>0){const s=t/D(h.spatialReference),l=i.findIndex(o=>o.resolution<s);l===0?n=0:l>0&&(n=l-1)}return n}const x={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};function v(h,e){const t=h.lods;if(A(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(s=>s.level>=i&&s.level<=n)}return t}function A(h){return(h==null?void 0:h.tileInfo)!=null}export{ee as ElevationQuery,y as GeometryDescriptor,N as getFinestLodIndex};
