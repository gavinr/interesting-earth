import{e,d as r,n as g,el as w,a8 as S,rg as I,qS as $,rh as x,qT as j,qU as T,nT as R,nU as F,nV as O,nW as P,rf as N,d2 as v,K as p,r as D,mm as k,ri as u,s2 as E,b0 as U,s6 as _,d1 as L,E as q,br as J,rj as A,mg as C,d3 as G,rk as V,am as W,h9 as c,rl as z,rm as M,rn as B,ra as X,cX as m,s7 as K,s8 as Q,d5 as Y,d6 as Z,rp as H,d4 as ee,cW as h,rq as te,n_ as re,s9 as ie,sa as se,d9 as oe,B as ne}from"./index.a8738f47.js";var y;let a=y=class extends w{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};e([r({type:Number,json:{write:!0}})],a.prototype,"age",void 0),e([r({type:Number,json:{write:!0}})],a.prototype,"ageReceived",void 0),e([r({type:Number,json:{write:!0}})],a.prototype,"displayCount",void 0),e([r({type:Number,json:{write:!0}})],a.prototype,"maxObservations",void 0),a=y=e([g("esri.layers.support.PurgeOptions")],a);const b=a,ae=S.getLogger("esri.layers.StreamLayer"),f=oe();let t=class extends I($(x(j(T(R(F(O(P(N(ne)))))))))){constructor(...i){super(...i),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new b,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=v.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(i,s){return typeof i=="string"?{url:i,...s}:i}load(i){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new p("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const s=D(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},i).catch(k).then(()=>this._fetchService(s))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(i){u(i,this.fieldsIndex),this._set("renderer",i)}readRenderer(i,s,o){const n=(s=s.layerDefinition||s).drawingInfo&&s.drawingInfo.renderer||void 0;if(n){const l=E(n,s,o)||void 0;return l||ae.error("Failed to create renderer",{rendererDefinition:s.drawingInfo.renderer,layer:this,context:o}),l}if(s.defaultSymbol)return s.types&&s.types.length?new U({defaultSymbol:d(s.defaultSymbol,s,o),field:s.typeIdField,uniqueValueInfos:s.types.map(l=>({id:l.id,symbol:d(l.symbol,l,o)}))}):new _({symbol:d(s.defaultSymbol,s,o)})}createPopupTemplate(i){return L(this,i)}createQuery(){const i=new q;return i.returnGeometry=!0,i.outFields=["*"],i.where=this.definitionExpression||"1=1",i}getFieldDomain(i,s){if(!this.fields)return null;let o=null;return this.fields.some(n=>(n.name===i&&(o=n.domain),!!o)),o}getField(i){return this.fieldsIndex.get(i)}serviceSupportsSpatialReference(i){return!0}async _fetchService(i){var s,o;if(this.webSocketUrl){if(!((s=this.timeInfo)!=null&&s.trackIdField))throw new p("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new p("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new p("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new p("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:n}=await J(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:i});this.sourceJSON=n}return this.sourceJSON={...(o=this.sourceJSON)!=null?o:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),u(this.renderer,this.fieldsIndex),A(this.timeInfo,this.fieldsIndex),C(this,{origin:"service"})}};e([r({type:String})],t.prototype,"copyright",void 0),e([r({readOnly:!0})],t.prototype,"defaultPopupTemplate",null),e([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),e([r({type:String})],t.prototype,"displayField",void 0),e([r({type:G})],t.prototype,"elevationInfo",void 0),e([r(V)],t.prototype,"featureReduction",void 0),e([r(f.fields)],t.prototype,"fields",void 0),e([r(f.fieldsIndex)],t.prototype,"fieldsIndex",void 0),e([r({type:W})],t.prototype,"geometryDefinition",void 0),e([r({type:c.apiValues,json:{read:{reader:c.read}}})],t.prototype,"geometryType",void 0),e([r(z)],t.prototype,"labelsVisible",void 0),e([r({type:[M],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:B},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],t.prototype,"labelingInfo",void 0),e([r(X)],t.prototype,"legendEnabled",void 0),e([r({type:["show","hide"]})],t.prototype,"listMode",void 0),e([r({type:m})],t.prototype,"maxReconnectionAttempts",void 0),e([r({type:m})],t.prototype,"maxReconnectionInterval",void 0),e([r(K)],t.prototype,"maxScale",void 0),e([r(Q)],t.prototype,"minScale",void 0),e([r({type:String})],t.prototype,"objectIdField",void 0),e([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],t.prototype,"operationalLayerType",void 0),e([r(Y)],t.prototype,"popupEnabled",void 0),e([r({type:Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],t.prototype,"popupTemplate",void 0),e([r({type:b})],t.prototype,"purgeOptions",void 0),e([r({types:H,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:ee,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],t.prototype,"renderer",null),e([h("service","renderer",["drawingInfo.renderer","defaultSymbol"]),h("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],t.prototype,"readRenderer",null),e([r(te)],t.prototype,"screenSizePerspectiveEnabled",void 0),e([r()],t.prototype,"sourceJSON",void 0),e([r({type:v,json:{origins:{service:{read:{source:"spatialReference"}}}}})],t.prototype,"spatialReference",void 0),e([r({json:{read:!1}})],t.prototype,"type",void 0),e([r(re)],t.prototype,"url",void 0),e([r({type:Number})],t.prototype,"updateInterval",void 0),e([r({type:String})],t.prototype,"webSocketUrl",void 0),t=e([g("esri.layers.StreamLayer")],t);const d=ie({types:se}),pe=t;export{pe as default};
