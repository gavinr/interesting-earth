import{nG as b,kB as L,aj as u,a4 as S,t as E,ad as v,nH as V,kP as C,aM as g,eQ as _,dn as l,kE as P,nI as $,nJ as y,ku as h,e as j,n as k,ls as I}from"./index.a8738f47.js";import{E as w}from"./QueryEngineResult.3d7a8c8d.js";import"./WhereClause.d715e7d1.js";import"./utils.bf6b5607.js";import"./ClassBreaksDefinition.d9c6c51f.js";import"./json.d1a0fa35.js";let f=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),S(n),await this._ensureEdgeLocations(t,n);const e=[];return this._edges.forEachNeighbor(s=>this._addCandidates(t,s,e),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,n){const e=[];if(this._components.forEachNeighbor(i=>{if(E(i.info)){const{id:a,uid:d}=i;e.push({id:a,uid:d})}},t.bounds),!e.length)return;const s={components:e},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,v(n,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const n=new p(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const e=[];this._edges.forEachNeighbor(s=>{s.component===n&&e.push(s)},n.bounds),this._edges.remove(e),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(E(n)||t.uid!==n.uid)return;const e=V.createView(t.locations),s=new Array(e.count),o=u(),i=u();for(let r=0;r<e.count;r++){const m=I(),c=l(m);e.position0.getVec(r,o),e.position1.getVec(r,i),C(c,c,o,.5),C(c,c,i,.5),g(c,c,t.origin),m[3]=_(c,o);const x=new T(n,r,m);s[r]=x}this._edges.add(s);const{objectIds:a,origin:d}=t;n.info={locations:e,objectIds:a,origin:d}}_addCandidates(t,n,e){const{locations:s,origin:o,objectIds:i}=n.component.info,a=s.position0.getVec(n.index,this._tmpP1),d=s.position1.getVec(n.index,this._tmpP2);g(a,a,o),g(d,d,o);const r=i[s.componentIndex.get(n.index)];this._addEdgeCandidate(t,r,a,d,e),this._addVertexCandidate(t,r,a,e),this._addVertexCandidate(t,r,d,e)}_addEdgeCandidate(t,n,e,s,o){if(!(t.types&w.EDGE))return;const i=l(t.bounds),a=P(e,s,this._tmpLineSegment),d=$(a,i,this._tmpP3);if(!y(t.bounds,d))return null;o.push({type:"edge",objectId:n,target:h(d),distance:_(i,d),start:h(e),end:h(s)})}_addVertexCandidate(t,n,e,s){if(!(t.types&w.VERTEX))return;const o=l(t.bounds);if(!y(t.bounds,e))return null;s.push({type:"vertex",objectId:n,target:h(e),distance:_(o,e)})}};function W(){return new f}f=j([k("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);class p{constructor(n,e){this.id=n,this.bounds=e,this.info=null,this.uid=++p.uid}}p.uid=0;class T{constructor(n,e,s){this.component=n,this.index=e,this.bounds=s}}export{f as SceneLayerSnappingSourceWorker,W as default};
