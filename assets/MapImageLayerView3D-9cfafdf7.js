import{ai as i,aj as o,al as p}from"./index-4b03b1b0.js";import{z as a}from"./DynamicLayerView3D-e8db3982.js";import{b as m}from"./commonProperties-1e64caff.js";import{m as n}from"./ExportImageParameters-ea1f759a.js";import{U as l}from"./MapServiceLayerViewHelper-cc81f0b8.js";import{r as h}from"./drapedUtils-fd696ea8.js";import"./LayerView3D-ba0927cb.js";import"./projectExtentUtils-a83fe3e6.js";import"./ImageMaterial-b5d1ffc4.js";import"./LayerView-dc80e8d1.js";import"./RefreshableLayerView-5aa0dbef.js";import"./ElevationInfo-f714f054.js";import"./sql-a39124b8.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-212558d3.js";import"./normalizeUtils-1bd513d6.js";import"./normalizeUtilsCommon-a78292a0.js";import"./popupUtils-81d67c22.js";const u=t=>{let e=class extends t{initialize(){this.exportImageParameters=new n({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return i([o()],e.prototype,"exportImageParameters",void 0),i([o({readOnly:!0})],e.prototype,"floors",null),i([o({readOnly:!0})],e.prototype,"exportImageVersion",null),i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"suspended",void 0),i([o(m)],e.prototype,"timeExtent",void 0),e=i([p("esri.views.layers.MapImageLayerView")],e),e};let s=class extends u(a){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this.updatingHandles.add(()=>this.exportImageVersion,()=>this.updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new l({createFetchPopupFeaturesQueryGeometry:(t,e)=>h(t,e,this.view),layerView:this,updatingHandles:this.updatingHandles})}destroy(){var t;(t=this._popupHighlightHelper)==null||t.destroy()}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}getFetchOptions(){return{timeExtent:this.timeExtent}}};s=i([p("esri.views.3d.layers.MapImageLayerView3D")],s);const D=s;export{D as default};
