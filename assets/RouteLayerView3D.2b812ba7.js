import{h as c,av as m,f as y,im as g,r as h,F as d,x as u,p as f,e as o,d as n,n as b}from"./index.a8738f47.js";import{b as v,h as O,O as _,g as w,a as I,c as S,D as V}from"./Stop.e8676f22.js";import{n as G}from"./LayerView3D.8dc7c2ab.js";import{_ as C}from"./GraphicsProcessor.ee9e344d.js";import{l as R}from"./projectExtentUtils.4c0871bc.js";import{r as $}from"./EventedSet.21b8712b.js";import{u as D}from"./LayerView.bc32b3eb.js";import"./Graphics3DScaleVisibility.8fa6127f.js";import"./optimizedFeatureQueryEngineAdapter.c129ff5f.js";import"./centroid.88cb65db.js";import"./PooledRBush.dcfb0021.js";import"./quickselect.03306040.js";import"./Graphics3DObjectStates.2d298d9b.js";function E(e){return e instanceof v||e instanceof O||e instanceof _||e instanceof w||e instanceof I||e instanceof S||e instanceof V}let r=class extends G(D){constructor(){super(...arguments),this.type="route-3d",this.loadedGraphics=new $,this._byObjectID=new Map,this.slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null}initialize(){this._set("processor",new C({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.setup()),this.updatingHandles.addOnCollectionChange(()=>this._routeItems,e=>this._routeItemsChanged(e),c),this.addResolvingPromise(R(this).then(e=>this.fullExtentInLocalViewSpatialReference=e)),this.handles.add(m(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:t.ready},()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("processor",y(this.processor))}get _routeItems(){return new g({getCollections:()=>[this.layer.pointBarriers,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.stops,this.layer.directionLines,this.layer.directionPoints,h(this.layer.routeInfo)?new d([this.layer.routeInfo]):null]})}_routeItemsChanged(e){if(e.removed.length){this.loadedGraphics.removeMany(e.removed.map(t=>{const s=this._byObjectID.get(t);return this._byObjectID.delete(t),s}));for(const t of e.removed)this.handles.remove(t)}if(e.added.length){this.loadedGraphics.addMany(e.added.map(t=>{const s=t.toGraphic();return this._byObjectID.set(t,s),s}));for(const t of e.added)this.handles.add([u(()=>t.geometry,(s,i)=>{this._updateGraphic(t,"geometry",s,i)}),u(()=>t.symbol,(s,i)=>{this._updateGraphic(t,"symbol",s,i)})],t)}}get legendEnabled(){var e;return this.canResume()&&!((e=this.processor)!=null&&e.frustumVisibilitySuspended)}getSuspendInfo(){var t,s,i,a;const e=super.getSuspendInfo();return e.outsideScaleRange=(s=(t=this.processor)==null?void 0:t.scaleVisibilitySuspended)!=null?s:!1,e.outsideOfView=(a=(i=this.processor)==null?void 0:i.frustumVisibilitySuspended)!=null?a:!1,e}async fetchPopupFeatures(e,t){return h(t)?t.clientGraphics:null}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){var s;return(s=this.processor)==null?void 0:s.computeAttachmentOrigin(e,t)}getSymbolLayerSize(e,t){return this.processor.getSymbolLayerSize(e,t)}async queryGraphics(){return new d(this.loadedGraphics.toArray())}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e){if(E(e)){const t=this._byObjectID.get(e);return this.processor.highlight(t)}return this.processor.highlight(e)}get updatePolicy(){var e;return((e=this.processor)==null?void 0:e.graphicsCore.effectiveUpdatePolicy)||f.SYNC}canResume(){var e;return super.canResume()&&!((e=this.processor)!=null&&e.scaleVisibilitySuspended)}isUpdating(){var e,t,s;return!(!((e=this.processor)!=null&&e.updating)&&((s=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:s.ready))}get performanceInfo(){var e,t,s;return{displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:-1,totalNumberOfFeatures:-1,nodes:0,core:null,updating:this.updating,elevationUpdating:(t=(e=this.processor)==null?void 0:e.elevationAlignment.updating)!=null?t:!1,visibilityFrustum:!((s=this.processor)!=null&&s.frustumVisibilitySuspended)}}_updateGraphic(e,t,s,i){var p;const a=this._byObjectID.get(e);a[t]=s,l.graphic=a,l.property=t,l.oldValue=i,l.newValue=s,(p=this.processor)==null||p.graphicsCore.graphicUpdateHandler(l)}};o([n()],r.prototype,"_routeItems",null),o([n()],r.prototype,"loadedGraphics",void 0),o([n({readOnly:!0})],r.prototype,"legendEnabled",null),o([n()],r.prototype,"layer",void 0),o([n({readOnly:!0})],r.prototype,"processor",void 0),o([n({type:Boolean})],r.prototype,"slicePlaneEnabled",void 0),r=o([b("esri.views.3d.layers.RouteLayerView3D")],r);const l={graphic:null,property:null,oldValue:null,newValue:null},T=r;export{T as default};
