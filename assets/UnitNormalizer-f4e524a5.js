import{e as V}from"./Segment-af4f81e7.js";import{aq as F,c2 as X,kB as g,kC as Y,kD as Z,a_ as tt,kE as et,b2 as nt,gj as at,gi as st,kF as it,kG as rt,kH as x,bm as S}from"./index-4b03b1b0.js";const gt={readOnly:!0,get(){return V(this.view)}};var G;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(G||(G={}));function C(t){if(!t)return null;if(Y(t)&&t.wkid){const e=Z[t.wkid];if(e)return e}if(t.wkt){const e=ot(t.wkt);if(e)return e}return null}function ot(t){const e=et.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const a=parseFloat(n[1]),s=parseFloat(n[2]);return isNaN(a)||isNaN(s)?null:{a,f:s===0?0:1/s}}function ct(t){const e=C(t??tt.WGS84);if(ht(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return C(t)!==null}function vt(t,e="meters"){if(!t)throw new F("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(a=>!lt(a.spatialReference)))throw new F("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let a=0;a<t.length;a++){const s=t[a],{spatialReference:m}=s,v=s.type==="polyline"?s.paths:s.rings;let r=0;for(let _=0;_<v.length;_++){const o=v[_];let f=0;for(let M=1;M<o.length;M++){const z=o[M-1][0],k=o[M][0],w=o[M-1][1],h=o[M][1];if(w!==h||z!==k){const c=new ut;ft(c,[z,w],[k,h],m),f+=c.distance}}r+=f}r=X(r,"meters",e),n.push(r)}return n}class ut{constructor(e=0,n=void 0,a=void 0){this.distance=e,this.azimuth=n,this.reverseAzimuth=a}}function ft(t,e,n,a){const s=e[0]*g,m=e[1]*g,v=n[0]*g,r=n[1]*g,{a:_,b:o,f,radius:M}=ct(a),z=v-s,k=Math.atan((1-f)*Math.tan(m)),w=Math.atan((1-f)*Math.tan(r)),h=Math.sin(k),c=Math.cos(k),R=Math.sin(w),l=Math.cos(w);let j,$,p,i,A,E,b,N,P,U,y=1e3,u=z;do{if(b=Math.sin(u),N=Math.cos(u),p=Math.sqrt(l*b*(l*b)+(c*R-h*l*N)*(c*R-h*l*N)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;A=h*R+c*l*N,E=Math.atan2(p,A),P=c*l*b/p,$=1-P*P,i=A-2*h*R/$,isNaN(i)&&(i=0),U=f/16*$*(4+f*(4-3*$)),j=u,u=z+(1-U)*f*P*(E+U*p*(i+U*A*(2*i*i-1)))}while(Math.abs(u-j)>1e-12&&--y>0);if(y===0){const W=M,J=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-s))*W,D=v-s,K=Math.sin(D)*Math.cos(r),L=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(D),Q=Math.atan2(K,L);return t.azimuth=Q/g,t.distance=J,t.reverseAzimuth=void 0,t}const d=$*(_*_-o*o)/(o*o),q=d/1024*(256+d*(d*(74-47*d)-128)),T=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(E-q*p*(i+q/4*(A*(2*i*i-1)-q/6*i*(4*p*p-3)*(4*i*i-3)))),B=Math.atan2(l*Math.sin(u),c*R-h*l*Math.cos(u)),I=Math.atan2(c*Math.sin(u),c*R*Math.cos(u)-h*l);return t.azimuth=B/g,t.distance=T,t.reverseAzimuth=I/g,t}function _t(t,e){if(nt(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)at(e,e,t[n]);st(e,e,1/t.length)}}function Rt(t,e,n,a){a.projectToRenderScreen(t,H),a.projectToRenderScreen(e,O),it(n,pt,Mt),rt(n,n)}const H=x(),Mt=H,O=x(),pt=O;class zt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=S(this._spatialReference,1),this._metersPerElevationUnit=S(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,gt as a,ft as b,_t as c,G as e,Rt as f,zt as t,vt as y};
