import{ai as r,aj as t,al as d,aq as y}from"./index-4b03b1b0.js";import{B as n}from"./FeatureLayer-7c5e0432.js";import"./UniqueValueRenderer-ad13318a.js";import"./ColorStop-0686847d.js";import"./diffUtils-3c37f4e6.js";import"./colorRamps-54548a9c.js";import"./jsonUtils-dc7d3627.js";import"./DictionaryLoader-b0bde137.js";import"./FieldsIndex-06c42f48.js";import"./heatmapUtils-fe1f2bfa.js";import"./MultiOriginJSONSupport-d720758b.js";import"./sql-a39124b8.js";import"./FeatureLayerBase-43dae5ea.js";import"./commonProperties-1e64caff.js";import"./ElevationInfo-f714f054.js";import"./featureLayerUtils-ce39121a.js";import"./AttachmentQuery-dd62ce87.js";import"./Query-cdee9722.js";import"./RelationshipQuery-ab8c76dd.js";import"./serviceCapabilitiesUtils-8d66cffa.js";import"./queryZScale-2a8227ea.js";import"./FeatureSet-d4d9321c.js";import"./APIKeyMixin-be880531.js";import"./ArcGISService-163e63f0.js";import"./BlendLayer-08a76f1b.js";import"./jsonUtils-555359b4.js";import"./CustomParametersMixin-64be6818.js";import"./FeatureEffectLayer-142ba535.js";import"./FeatureEffect-82bb4002.js";import"./FeatureFilter-e71c77dc.js";import"./FeatureReductionLayer-b84a7e30.js";import"./LabelClass-3b8bddeb.js";import"./defaults-d003668a.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-5b164959.js";import"./OrderedLayer-908cb5be.js";import"./PortalLayer-473e8b12.js";import"./portalItemUtils-89a0d48a.js";import"./ScaleRangeLayer-31eefac8.js";import"./TemporalLayer-5e4b9999.js";import"./FeatureTemplate-0db006f4.js";import"./FeatureType-e95921de.js";import"./fieldProperties-ff8bee5a.js";import"./labelingInfo-66d1a5d0.js";import"./versionUtils-9472ade8.js";import"./styleUtils-5fb07ac6.js";import"./TopFeaturesQuery-da745a52.js";import"./popupUtils-8d4c7bed.js";function o(i){return(a,m,s)=>{if(!a)return null;const p=a[0].orientedImageryProperties;return(p==null?void 0:p[i])??null}}let e=class extends n{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){var p;const{elevationSource:i,demPathPrefix:a,demPathSuffix:m}=this;if(!((p=i==null?void 0:i.url)!=null&&p.trim()))return i;let s=i.url.trim();return a!=null&&a.trim()&&(s=`${a.trim()}/${s}`),m!=null&&m.trim()&&(s+=`/${m.trim()}`),{...i,url:s}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new y("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([d("esri.layers.OrientedImageryLayer")],e);const pe=e;export{pe as default};
