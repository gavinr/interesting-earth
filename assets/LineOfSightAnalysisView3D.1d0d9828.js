import{e as n,d as o,l as c,n as V,y as R,aj as m,eA as ie,lG as qe,k4 as Je,lH as Qe,kC as ze,a9 as Ze,aa as ce,kV as Ke,lk as Ye,kW as Xe,t as h,k2 as x,lI as et,dq as K,lJ as de,lK as tt,lL as ue,r as u,Z as it,ag as S,jb as _e,aN as q,aM as J,i0 as me,ku as nt,a8 as He,Y as xe,c as ot,an as we,u as Y,ay as ne,eQ as st,lM as rt,lN as at,eT as te,lO as W,aO as lt,kQ as Oe,cT as oe,x as O,G as F,ht as se,U as Fe,lP as Ge,hi as Te,hh as ut,kM as ct,H as Ne,aw as Ce,ad as dt,ai as pt,b7 as ht,k$ as Ie,lQ as vt,lR as gt,kT as X,bK as yt,F as je,kB as _t,f as E,cL as Ue,kE as mt,lS as pe,lT as Le,d3 as Se,h as ft,dp as bt}from"./index.a8738f47.js";import{C as he,a as Ct}from"./LineVisualElement.c8ac394d.js";import{l as ve,f as fe,u as Ve}from"./LineOfSightAnalysisTarget.091ad9e1.js";import{d as Re,u as wt,f as Ot}from"./elevationInfoUtils.fe889101.js";import{a as Pe}from"./projectionUtils.eb41893b.js";import{t as Tt,w as It,a as Lt,p as Ee,c as St,m as Vt}from"./analysisViewUtils.1368068e.js";import{_ as Rt,S as Ae}from"./PointVisualElement.1a1f0dbc.js";import"./persistable.6d7b5a7d.js";import"./multiOriginJSONSupportUtils.8128aa52.js";let $=class extends R{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new c([3,252,111,1]),this.visibleOuterColor=new c([3,252,111,.15]),this.occludedInnerColor=new c([252,3,69,1]),this.occludedOuterColor=new c([252,3,69,.1]),this.undefinedInnerColor=new c([255,255,255,1]),this.undefinedOuterColor=new c([127,127,127,.2])}};n([o({type:Number})],$.prototype,"innerWidth",void 0),n([o({type:Number})],$.prototype,"outerWidth",void 0),n([o({type:c})],$.prototype,"visibleInnerColor",void 0),n([o({type:c})],$.prototype,"visibleOuterColor",void 0),n([o({type:c})],$.prototype,"occludedInnerColor",void 0),n([o({type:c})],$.prototype,"occludedOuterColor",void 0),n([o({type:c})],$.prototype,"undefinedInnerColor",void 0),n([o({type:c})],$.prototype,"undefinedOuterColor",void 0),$=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],$);let G=class extends R{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};n([o()],G.prototype,"target",void 0),n([o()],G.prototype,"intersectedGraphic",void 0),n([o()],G.prototype,"intersectedLocation",void 0),n([o()],G.prototype,"elevationAlignedTargetLocation",void 0),n([o({type:Boolean})],G.prototype,"visible",void 0),G=n([V("esri.views.3d.analysis.LineOfSightAnalysisResult")],G);let N=class extends R{constructor(e){super(e),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:m(),observerSurfaceNormal:null,observerFeatureId:null,target:m(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:m(),targetAdjusted:m()},this.computationResult={start:m(),end:m(),intersection:m(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};n([o()],N.prototype,"target",void 0),n([o()],N.prototype,"elevationAlignedTargetLocation",void 0),n([o()],N.prototype,"inputPoints",void 0),n([o()],N.prototype,"computationResult",void 0),n([o()],N.prototype,"result",void 0),N=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],N);var be;let M=be=class extends R{constructor(e){super(e)}clone(){return new be({type:this.type,id:ie(this.id),point:ie(this.point),normal:ie(this.normal),ray:ie(this.ray),graphic:this.graphic})}equals(e){return this.type===e.type&&this.id===e.id&&qe(this.point,e.point)&&Je(this.normal,e.normal)&&Qe(this.ray,e.ray)&&this.graphic===e.graphic}};n([o()],M.prototype,"type",void 0),n([o({constructOnly:!0})],M.prototype,"id",void 0),n([o({constructOnly:!0})],M.prototype,"point",void 0),n([o({constructOnly:!0})],M.prototype,"normal",void 0),n([o({constructOnly:!0})],M.prototype,"graphic",void 0),n([o({constructOnly:!0})],M.prototype,"ray",void 0),M=be=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],M);let Q=class extends R{constructor(e){super(e),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=Ze(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=ce.MIN}getScreenPointIntersection(e){const t=Ke(e,Ye.get()),i=Xe(this.view.state.camera,t,ye);return this._getRayIntersection(i)}_getRayIntersection(e,t){if(h(e)||h(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=ce.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector,t);const i=this.intersector.results.min;if(!i.getIntersectionPoint(ge))return null;const s=this.view.renderCoordsHelper.fromRenderCoords(ge,this.view.spatialReference),r=x(i.normal);if(et(i))return new M({type:K.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,point:s,normal:r,ray:de(e),graphic:null});if(tt(i))return new M({type:K.TERRAIN,id:i.target.lij.slice(),point:s,normal:r,ray:de(e),graphic:null});const a=ue(i,this.view);if(u(a)){const l=a.layer,g=a.sourceLayer;let d;return g&&g.type==="scene"?d=it(a,g.objectIdField):d=a.uid,new M({type:K.OBJECT,id:`${l.uid}/${d}`,point:s,normal:r,ray:de(e),graphic:a})}return null}updateFromGroundIntersection(e,t,i){const s=ge,r=Pt,a=Et,l=At,g=$t;S(r,e),this.view.renderCoordsHelper.worldUpAtPosition(r,a),_e(a,a);const d=this.view.basemapTerrain.elevationBounds,v=this.view.renderCoordsHelper.getAltitude(r),p=d?Math.abs(d.max-d.min):100,_=v>0?1:-1;q(l,a,_*(p+Math.abs(t))),J(s,r,l),me(s,r,ye);const y=this._getRayIntersection(ye,{include:this._terrainIntersectionOptionsLayerUids});return u(y)&&u(y.point)?(this.view.renderCoordsHelper.toRenderCoords(y.point,g),q(l,a,_*t),J(i,g,l),nt(y.normal)):(S(i,e),null)}};n([o()],Q.prototype,"view",void 0),n([o()],Q.prototype,"intersector",void 0),Q=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],Q);const ge=m(),Pt=m(),Et=m(),At=m(),$t=m(),ye=ze(),$e=He.getLogger("esri.views.3d.analysis.LineOfSight.LineOfSightController");let b=class extends xe.EventedMixin(R){constructor(e){super(e),this.updateOnCameraChange=!0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new ot,this._frameTask=we,this._handles=new Y,this._computationHandles=new Y,this._externalObserverUpdate=!0}initialize(){var t;const e=(t=this.view.resourceController)==null?void 0:t.scheduler;this._frameTask=e?e.registerTask(ne.LINE_OF_SIGHT_TOOL):we,this._intersector=new Q({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}getLineOfSightComputationDependencies(e){const{inputPoints:t}=e;return{inputPoints:t}}_computeResult(e){const t=e.computation,{inputPoints:i,computationResult:s}=t,{observerAdjusted:r,targetAdjusted:a}=i,{start:l,end:g}=s;S(l,r),S(g,a),this._canCompute(t)?this._computeIntersection(e):this._interpolateIntersection(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})}_updateAdjustedPointsFromFeatures(e){const t=this.view,{sceneIntersectionHelper:i}=t,{inputPoints:s}=e,{observerAdjusted:r,observerFeatureId:a,targetFeatureId:l,targetAdjusted:g}=s;if(h(a)&&h(l))return;const d=st(r,g),v=this._intersector.intersector,p=me(s.observer,s.target,Me);v.options.store=ce.ALL,i.intersectToolIntersectorRay(p,v);let _=null,y=null,L=null,I=null;for(const T of v.results.all){const f=ue(T,this.view);if(h(f)||h(T.distanceInRenderSpace))continue;const A=ve(f);h(A)||(u(a)&&A===a&&(h(_)&&(_=this._getFeatureDistanceThreshold(T,t,d)),T.distanceInRenderSpace<_&&(L=T)),u(l)&&A===l&&(h(y)&&(y=this._getFeatureDistanceThreshold(T,t,d)),h(I)&&T.distanceInRenderSpace<d&&d-T.distanceInRenderSpace<y&&(I=T)))}u(L)&&L.getIntersectionPoint(r)&&(s.observerSurfaceNormal=L.getTransformedNormal(m())),u(I)&&I.getIntersectionPoint(g)&&(s.targetSurfaceNormal=I.getTransformedNormal(m()))}_getFeatureDistanceThreshold(e,t,i){if(rt(e)){const s=at(e,t);if(u(s))return Math.min(s*Dt,i)}return 1e-5*i}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:s}=e,{observer:r,observerSurfaceNormal:a,target:l,targetSurfaceNormal:g,observerAdjusted:d,targetAdjusted:v}=s,p=re;S(d,r),S(v,l),this._updateAdjustedPointsFromFeatures(e),u(a)?S(p,a):te(p,v,d);const _=t;_e(p,p),q(p,p,Math.min(_,1)),J(d,d,p),u(g)?S(p,g):te(p,d,v);const y=i.state.camera.computeScreenPixelSizeAt(v);_e(p,p),q(p,p,Math.min(y,1)),J(v,v,p)}_computeIntersection({computation:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:s,renderCoordsHelper:r}=i;if(h(s))return;const a=this._intersector.intersector,{computationResult:l,inputPoints:g}=e,{observer:d,target:v}=g,{start:p,end:_}=l,y=me(p,_,Me);a.options.store=ce.MIN,s.intersectToolIntersectorRay(y,a);const L=a.results.min,I=l.intersection,T=re;let f=!0;if(u(L)&&L.getIntersectionPoint(I)){S(t.originalIntersection,I),S(t.originalObserver,p),S(t.originalTarget,_),r.fromRenderCoords(I,T,i.spatialReference);const P=1-W(_,v)/W(p,v);f=W(d,I)>=P*W(d,v)}const A=new lt(T,i.spatialReference);{const{result:P,target:H}=e;u(P)?(P.target=H,P.intersectedGraphic=f?null:ue(L,i),P.intersectedLocation=f?null:A,P.visible=f):e.result=new G({target:H,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:f?null:ue(L,i),intersectedLocation:f?null:A,visible:f})}l.isValid=g.isValid=!0,l.isTargetVisible=f}_interpolateIntersection({computation:e,interpolationInfo:t}){const{computationResult:i,inputPoints:s}=e,{start:r,end:a,intersection:l}=i,{originalIntersection:g,originalObserver:d,originalTarget:v}=t;if(S(l,g),s.isValid){const p=re,_=W(d,g)/W(d,v);Oe(p,r,d),q(p,p,1-_),J(l,l,p),Oe(p,a,v),q(p,p,_),J(l,l,p),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(h(t)||h(e.elevationAlignedTargetLocation)||h(i))return!1;const{observerAdjusted:s,targetAdjusted:r}=e.inputPoints,a=i.intersectsPoint(s),l=i.intersectsPoint(r);return a&&l}_onObserverPositionChange(e,t,i,s,r){if(this._externalObserverUpdate=r,h(e))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(h(t))return Pe(this.analysis,e.spatialReference,$e),void(this.analysisViewData.elevationAlignedObserver=null);const a=this._getEffectiveElevationInfo(t,i),{absoluteZ:l,elevation:g}=Re(t.x,t.y,t.z,this.view.spatialReference,this.view,a),d=t.clone();d.z=l,this._effectiveObserverElevationMode=a.mode,this.analysisViewData.elevationAlignedObserver=d;const v=m();this.view.renderCoordsHelper.toRenderCoords(d,v),this._elevationAlignedObserverPositionRenderSpace=v,this._observerGroundOffsetRenderSpace=l-g,this._observerFeatureId=ve(s),this.priority=ne.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(e,t,i,s,r){const{inputPoints:a}=e;switch(S(a.observer,t),a.observerFeatureId=r,a.observerSurfaceNormal=null,s){case"on-the-ground":case"relative-to-ground":{const l=this._intersector.updateFromGroundIntersection(a.observer,i,a.observer);h(a.observerFeatureId)&&(a.observerSurfaceNormal=l)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=ne.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(e,t,i,s,r,a=!0){const l=e.inputPoints;if(a&&(l.isValid=!1),h(i))return u(t)&&Pe(this.analysis,t.spatialReference,$e),e.elevationAlignedTargetLocation=null,void e.notifyInputPointsChanged();const g=this._getEffectiveElevationInfo(i,s),{absoluteZ:d,elevation:v}=Re(i.x,i.y,i.z,this.view.spatialReference,this.view,g),p=i.clone();switch(p.z=d,e.elevationAlignedTargetLocation=p,this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,l.target),l.targetFeatureId=ve(r),l.targetSurfaceNormal=null,g.mode){case"on-the-ground":case"relative-to-ground":{const _=this._intersector.updateFromGroundIntersection(l.target,d-v,l.target);h(l.targetFeatureId)&&(l.targetSurfaceNormal=_)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=ne.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(e){return oe([O(()=>({computation:e,targetPosition:e.target.position,targetElevationInfo:e.target.elevationInfo,targetFeatureInfo:e.target.feature,projectedTargetPosition:se(e.target.position,this.view.spatialReference)}),({computation:t,targetPosition:i,targetElevationInfo:s,targetFeatureInfo:r,projectedTargetPosition:a})=>{u(a.pending)?this._updatingHandles.addPromise(a.pending):this._onTargetPositionChange(t,i,a.geometry,s,r)},F)])}_connectComputationToObserver(e){return O(()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},F)}_connectComputationToRenderSpaceObserver(e){return O(()=>({computation:e,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:i,observerGroundOffset:s,observerElevationMode:r,observerFeatureId:a})=>{this._onObserverRenderSpacePositionChangeForComputation(t,i,s,r,a)},F)}_connectComputationToCamera(e){return O(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()},Fe)}_connectComputationToSlicePlane(e){return O(()=>this.view.slicePlane,()=>{e.inputPoints.isValid=!1,e.notifyInputPointsChanged()})}_connectComputationToElevation(e){const t=(i,s)=>{const r=this.analysis.observer,a=e.target;let l=null,g=null,d=null,v=null,p=null,_=null;if(u(r)&&u(r.position)){const y=se(r.position,this.view.spatialReference);if(u(y.pending))return this._updatingHandles.addPromise(y.pending),void y.pending.finally(()=>t(i,s));l=y.geometry,g=r.elevationInfo,d=r.feature}if(u(a.position)){const y=se(a.position,this.view.spatialReference);if(u(y.pending))return this._updatingHandles.addPromise(y.pending),void y.pending.finally(()=>t(i,s));v=y.geometry,p=a.elevationInfo,_=a.feature}h(l)&&h(v)||(ht(i,s,ae,this.view.spatialReference),u(l)&&Ie(ae,l)&&this._onObserverPositionChange(u(r)?r.position:null,l,g,d,!1),u(v)&&Ie(ae,v)&&this._onTargetPositionChange(e,a.position,v,p,_,!1),u(l)&&u(v)&&vt(ae,l,v)&&e.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",i=>t(i.extent,i.spatialReference))}_connectComputationToTask(e){let t=gt;const i={computation:e,interpolationInfo:{originalIntersection:m(),originalObserver:m(),originalTarget:m()}};return oe([O(()=>this.getLineOfSightComputationDependencies(e),()=>{t=Te(t),t=ut(async s=>{await ct(this._frameTask.schedule(()=>this._computeResult(i),s))})},{sync:!0,initial:!0,equals:Ge}),Ne(()=>t=Te(t))])}_connectComputation(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_onComputationCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_onTargetCollectionChange({added:e,removed:t}){for(const i of t)this._removeTarget(i);for(const i of e)this._addTarget(i)}_onCursorTargetChange(e,t){u(t)&&this._removeTarget(t),u(e)&&this._addTarget(e)}_addTarget(e){this._computations.some(t=>t.target===e)||this._computations.add(new N({target:e}))}_removeTarget(e){const t=this._computations.findIndex(i=>i.target===e);this._computations.removeAt(t)}_connectObserver(){return oe([O(()=>({observerPosition:u(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:se(u(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:u(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:u(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:e,projectedObserverPosition:t,observerElevationInfo:i,observerFeatureInfo:s})=>{u(t.pending)?this._updatingHandles.addPromise(t.pending):this._onObserverPositionChange(e,t.geometry,i,s,!0)},F)])}_connectComputations(){return Ce(()=>this._computations,"change",e=>this._onComputationCollectionChange(e),{onListenerAdd:e=>{for(const t of e)this._connectComputation(t)},onListenerRemove:e=>{for(const t of e)this._disconnectComputation(t)},sync:!0})}_connectTargets(){return oe([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,e=>this._onTargetCollectionChange(e),{initial:!0,final:!0}),O(()=>this.analysisViewData.cursorTarget,(e,t)=>{this._onCursorTargetChange(e,t)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(h(e)||h(i))return!1;const s=re;i.toRenderCoords(e,s);const r=t.state.camera.computeScreenPixelSizeAt(s);return Math.abs((r-this._screenPixelSize)/this._screenPixelSize)>Mt}_getEffectiveElevationInfo(e,t){return e.hasZ?dt(t,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};n([o({constructOnly:!0})],b.prototype,"analysis",void 0),n([o({constructOnly:!0})],b.prototype,"analysisViewData",void 0),n([o({constructOnly:!0})],b.prototype,"view",void 0),n([o()],b.prototype,"updating",null),n([o()],b.prototype,"priority",null),n([o()],b.prototype,"updateOnCameraChange",void 0),n([o()],b.prototype,"_computations",null),n([o()],b.prototype,"_elevationAlignedObserverPositionRenderSpace",null),n([o()],b.prototype,"_observerGroundOffsetRenderSpace",void 0),n([o()],b.prototype,"_effectiveObserverElevationMode",void 0),n([o()],b.prototype,"_observerFeatureId",void 0),n([o()],b.prototype,"_screenPixelSize",null),n([o({readOnly:!0})],b.prototype,"_updatingHandles",void 0),n([o()],b.prototype,"_frameTask",void 0),n([o()],b.prototype,"_isCameraDirty",null),b=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightController")],b);const Mt=.1,re=m(),Me=ze(),ae=pt(),Dt=.05;let k=class extends R{constructor(e){super(e),this.enabled=!0,this.glowColor=new c([255,127,0]),this.glowWidth=8,this.innerColor=new c([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};n([o({type:Boolean})],k.prototype,"enabled",void 0),n([o({type:c})],k.prototype,"glowColor",void 0),n([o({type:Number})],k.prototype,"glowWidth",void 0),n([o({type:c})],k.prototype,"innerColor",void 0),n([o({type:Number})],k.prototype,"innerWidth",void 0),n([o({type:Number})],k.prototype,"globalAlpha",void 0),k=n([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],k);let Z=class extends R{constructor(e){super(e),this.size=.5,this.color=new c([255,127,0,.75])}};n([o({type:Number})],Z.prototype,"size",void 0),n([o({type:c})],Z.prototype,"color",void 0),Z=n([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],Z);let j=class extends R{constructor(e){super(e),this.size=.5,this.visibleColor=new c([3,252,111,.75]),this.occludedColor=new c([252,3,69,.75]),this.undefinedColor=new c([127,127,127,.75])}};n([o({type:Number})],j.prototype,"size",void 0),n([o({type:c})],j.prototype,"visibleColor",void 0),n([o({type:c})],j.prototype,"occludedColor",void 0),n([o({type:c})],j.prototype,"undefinedColor",void 0),j=n([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],j);class z extends R{constructor(t){super(t),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new c([3,252,111,1]),this.visibleOuterColor=new c([3,252,111,.15]),this.occludedInnerColor=new c([252,3,69,1]),this.occludedOuterColor=new c([252,3,69,.1]),this.undefinedInnerColor=new c([255,255,255,1]),this.undefinedOuterColor=new c([127,127,127,.2])}}n([o({type:Number})],z.prototype,"innerWidth",void 0),n([o({type:Number})],z.prototype,"outerWidth",void 0),n([o({type:c})],z.prototype,"visibleInnerColor",void 0),n([o({type:c})],z.prototype,"visibleOuterColor",void 0),n([o({type:c})],z.prototype,"occludedInnerColor",void 0),n([o({type:c})],z.prototype,"occludedOuterColor",void 0),n([o({type:c})],z.prototype,"undefinedInnerColor",void 0),n([o({type:c})],z.prototype,"undefinedOuterColor",void 0);let U=class extends R{constructor(e){super(e),this.laserLine=new k,this.observer=new Z,this.target=new j,this.lineOfSight=new z}};n([o({type:k})],U.prototype,"laserLine",void 0),n([o({type:Z})],U.prototype,"observer",void 0),n([o({type:j})],U.prototype,"target",void 0),n([o({type:z})],U.prototype,"lineOfSight",void 0),U=n([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],U);function kt(e,t){let i=null;const s=e.events.on("grab-changed",r=>{u(i)&&(i.remove(),i=null),r.action==="start"&&(i=e.disableDisplay()),t&&t(r)});return{remove(){u(i)&&i.remove(),s.remove()}}}function le(e,t,i){return{geometry:yt.createSphereGeometry(e,32,32),material:It(c.toUnitRGBA(t)),stateMask:i}}function Be(e){const t=[];return e.customColor1&&t.push(le(e.size,e.customColor1,X.Custom1)),e.customColor2&&t.push(le(e.size,e.customColor2,X.Custom2)),e.customColor3&&t.push(le(e.size,e.customColor3,X.Custom3)),e.color&&t.push(le(e.size,e.color)),t}function zt(e,t){const i=Be(t),s=new Tt({view:e,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return kt(s),s}var B;(function(e){e.Ready="ready",e.Creating="creating",e.Created="created"})(B||(B={}));je.ofType(fe);const De=He.getLogger("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool");let C=class extends Lt{constructor(e){super(e),this.preferManipulatorCursor=!0,this.removeIncompleteOnCancel=!1,this.configuration=new U,this.analysisViewData=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new Y,this._handles=new Y,this._manipulatorHandles=new Y,this._targetTrackerManipulator=null}initialize(){this._intersector=new Q({view:this.view}),this._handles.add(O(()=>this.state,e=>{e===B.Created&&this.finishToolCreation()},F)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([O(()=>({...this.configuration.observer}),()=>this._updateObserverManipulatorStyle(),Fe),O(()=>this.analysisViewData.elevationAlignedObserver,e=>this._onObserverLocationChange(e),F),O(()=>({...this.configuration.laserLine}),()=>this._createVisualElements(),F),O(()=>this._laserLineRendererDependencies(),e=>this._updateLaserLineRenderer(e)),this._connectComputations()])}destroy(){this._handles=E(this._handles),this._manipulatorHandles=E(this._manipulatorHandles),this._analysisHandles=E(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?u(this._grabbedManipulator)?B.Created:B.Creating:u(this.analysis.observer)&&u(this.analysis.observer.position)?B.Created:B.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return!!u(this.analysisViewData)&&this.analysisViewData.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){return this._showTracker&&u(this.analysis.observer)&&u(this.analysis.observer.position)&&!this.hasFocusedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){e.type==="immediate-click"&&this._clickHandler(e)}onShow(){}onHide(){this._grabbedManipulator=null}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return Ce(()=>this.analysisViewData.computations,"change",e=>this._onComputationsCollectionChange(e),{onListenerAdd:e=>{for(const t of e)this._connectComputation(t)},onListenerRemove:e=>{for(const t of e)this._disconnectComputation(t)},sync:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_connectComputation(e){if(this.destroyed)return void De.warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const t=this._analysisHandles;if(t.has(e))return;const i=this._createTargetManipulator(e.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),t.add([O(()=>this._getLineOfSightManipulatorStateDependencies(e),()=>this._updateManipulatorState(i,e),F),O(()=>e.elevationAlignedTargetLocation,s=>this._onTargetLocationChange(s,i),F)],e)}_disconnectComputation(e){if(this.destroyed)return void De.warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(e);const t=this._getTargetManipulator(e.target);u(t)&&(this.manipulators.remove(t),this._manipulatorHandles.remove(t),u(this._targetTrackerManipulator)&&this._targetTrackerManipulator===t&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=E(this.analysisViewData.cursorTarget)}_createManipulator(e,t,i){const s=zt(this.view,e);return s.metadata=i,this._manipulatorHandles.add([t(s),s.events.on("grab-changed",r=>this._manipulatorGrabChanged(s,r)),s.events.on("immediate-click",r=>this._manipulatorClick(s,r))],s),this.manipulators.add(s),s}_createTargetManipulator(e){const t=this.configuration,i={size:t.target.size,customColor1:t.target.visibleColor,customColor2:t.target.occludedColor,customColor3:t.target.undefinedColor,visible:!0},s={target:e,type:"target"},r=this._createManipulator(i,a=>this._createTargetManipulatorDragPipeline(a),s);return u(e.position)?r.elevationAlignedLocation=e.position:r.available=!1,r}_getTargetManipulator(e){let t=null;return this.manipulators.forEach(i=>{const s=i.manipulator;h(t)&&s.metadata.type==="target"&&s.metadata.target===e&&(t=s)}),t}_createObserverManipulator(){const e=this.configuration,t={size:e.observer.size,color:e.observer.color,visible:!0};return this._createManipulator(t,i=>this._createObserverManipulatorDragPipeline(i),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const e=this._observerManipulator,t=this.configuration.observer,i={size:t.size,color:t.color,visible:e.available};e.renderObjects=Be(i)}_screenToIntersection(){return e=>{const t=this._intersector.getScreenPointIntersection(e.screenEnd);return h(t)?null:{...e,intersection:t}}}_createTargetManipulatorDragPipeline(e){return Ee(e,(t,i,s)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(e)).next(()=>this._updateLaserLineRenderer()),s.next(this._cancelTargetDragStep(e.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(e){return Ee(e,(t,i,s)=>{i.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),s.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return e=>(u(e.intersection.point)?(h(this.analysis.observer)&&(this.analysis.observer=new Ve),this._updateFromIntersection(this.analysis.observer,e.intersection)):this.analysis.observer=null,e)}_cancelObserverDragStep(){const e=u(this.analysis.observer)&&u(this.analysis.observer.position)?this.analysis.observer.clone():null;return t=>(this.analysis.observer=e,t)}_updateTargetDragStep(e){return t=>{this._updateFromIntersection(e.metadata.target,t.intersection);const i=t.intersection.point;return u(i)&&(e.elevationAlignedLocation=i),t}}_cancelTargetDragStep(e){const t=Ue(e.position,i=>i.clone());return i=>(e.position=t,i)}_manipulatorGrabChanged(e,t){switch(t.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}}_updateManipulatorState(e,t){const{isValid:i,isTargetVisible:s}=t.computationResult;e.state=i?s?X.Custom1:X.Custom2:X.Custom3}_getLineOfSightManipulatorStateDependencies(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:u(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(e=this._laserLineRendererDependencies()){const{laserlineVisualElement:t,grabbedManipulator:i,shouldRenderTracker:s,observerPosition:r,visible:a}=e;if(h(t))return;const l=u(i)?i:s&&u(r)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&u(l)&&a?(t.visible=!0,t.heightManifoldTarget=l.renderLocation,l!==this._observerManipulator?t.lineVerticalPlaneSegment=mt(this._observerManipulator.renderLocation,l.renderLocation,Ht):t.lineVerticalPlaneSegment=null):(t.visible=!1,t.heightManifoldTarget=null,t.lineVerticalPlaneSegment=null)}_createVisualElements(){const e=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new Rt({view:this.view,attached:!0,visible:this.visible,style:{glowColor:c.toUnitRGB(e.glowColor),glowWidth:e.glowWidth,innerColor:c.toUnitRGB(e.innerColor),innerWidth:e.innerWidth,globalAlpha:e.globalAlpha}})}_removeVisualElements(){u(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(e){h(e)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=e)}_onTargetLocationChange(e,t){u(e)?(t.elevationAlignedLocation=e,t!==this._targetTrackerManipulator&&(t.available=!0)):t.available=!1}_addPointFromClickEvent(e){const t=this._intersector.getScreenPointIntersection(e);if(!h(t)&&!h(t.point))if(u(this.analysis.observer)&&u(this.analysis.observer.position)){this._clearCursorTracker();const i=new fe;this._updateFromIntersection(i,t),this.analysis.targets.add(i)}else{const i=new Ve;this._updateFromIntersection(i,t),this.analysis.observer=i}}_clickHandler(e){this.active&&e.button!==pe.Right&&(this._addPointFromClickEvent(Le(e)),e.stopPropagation())}_doubleClickHandler(e){this.active&&e.button!==pe.Right&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this.active&&e.key==="Escape"&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){if(this.hasFocusedManipulators||(this._latestPointerMovePointerType=e.pointerType,this._updateLaserLineRenderer(),!this._showTracker||h(this.analysis.observer)||h(this.analysis.observer.position)))return;const t=Le(e),i=this._intersector.getScreenPointIntersection(t);u(i)&&u(i.point)&&(h(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new fe),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(e,t){if(h(t.point))return e.position=null,e.elevationInfo=null,void(e.feature=null);switch(t.type){case K.OBJECT:if(u(t.graphic)){const s=t.graphic,r=wt(s);r.mode==="on-the-ground"&&(r.mode="relative-to-ground",r.offset=0),e.elevationInfo=new Se(r),e.feature=s}else e.elevationInfo=null,e.feature=null;break;case K.TERRAIN:case K.I3S:e.elevationInfo=new Se({mode:"on-the-ground"}),e.feature=null;break;default:e.elevationInfo=null,e.feature=null}const i=t.point.clone();i.z=Ot(this.view,i,{mode:"absolute-height",offset:0},e.elevationInfo),e.position=i}_manipulatorClick(e,t){if(e.metadata.type==="observer"||e.grabbing||e.dragging||t.button!==pe.Right||this.analysis.targets.length<=1)return;const{target:i}=e.metadata;this.analysis.targets.remove(i),t.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};n([o({constructOnly:!0})],C.prototype,"view",void 0),n([o({constructOnly:!0})],C.prototype,"analysis",void 0),n([o({readOnly:!0})],C.prototype,"state",null),n([o({readOnly:!0})],C.prototype,"cursor",null),n([o({readOnly:!0})],C.prototype,"preferManipulatorCursor",void 0),n([o()],C.prototype,"removeIncompleteOnCancel",void 0),n([o({readOnly:!0})],C.prototype,"updating",null),n([o({type:U})],C.prototype,"configuration",void 0),n([o({constructOnly:!0})],C.prototype,"analysisViewData",void 0),n([o({readOnly:!0})],C.prototype,"_showTracker",null),n([o()],C.prototype,"_latestPointerMovePointerType",void 0),n([o()],C.prototype,"_shouldRenderTracker",null),n([o()],C.prototype,"_laserlineVisualElement",void 0),n([o()],C.prototype,"_grabbedManipulator",void 0),C=n([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],C);const Ht=_t();let D=class extends R{constructor(e){super(e),this._lineOfSightVisualizations=[],this._computationHandles=new Y}initialize(){this.own(this._connectComputations()),this._createObserverVisualization()}destroy(){this._computationHandles=E(this._computationHandles),this._observerVisualElement=E(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const e=this._configuration,t=this.view,i={view:t,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},s=c.toUnitRGBA(e.visibleOuterColor),r=c.toUnitRGBA(e.visibleInnerColor),a=c.toUnitRGBA(e.occludedOuterColor),l=c.toUnitRGBA(e.occludedInnerColor),g=c.toUnitRGBA(e.undefinedOuterColor),d=c.toUnitRGBA(e.undefinedInnerColor),v={visibleLineVisualElement:new he({...i,color:s,innerColor:r}),occludedLineVisualElement:new he({...i,color:a,innerColor:l}),undefinedLineVisualElement:new he({...i,color:g,innerColor:d}),targetVisualElement:new Ae({view:t,attached:!0,...ke,size:8})};return this._lineOfSightVisualizations.push(v),v}_destroyLineOfSightVisualization(e){e.visibleLineVisualElement=E(e.visibleLineVisualElement),e.occludedLineVisualElement=E(e.occludedLineVisualElement),e.undefinedLineVisualElement=E(e.undefinedLineVisualElement),e.targetVisualElement=E(e.targetVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(e),1)}_updateLineOfSightVisualization(e,t,i){const s=this._configuration,{computationResult:r,inputPoints:a}=e,{start:l,end:g,intersection:d,isValid:v,isTargetVisible:p}=r,{observer:_}=a,y=Nt;y[12]=_[0],y[13]=_[1],y[14]=_[2];const L=te(xt,l,_),I=te(Ft,g,_),T=te(Gt,d,_),{visibleLineVisualElement:f,occludedLineVisualElement:A,undefinedLineVisualElement:P,targetVisualElement:H}=t,We=h(this.analysisViewData.elevationAlignedObserver)||h(e.elevationAlignedTargetLocation),ee=this.visible&&!We;f.visible=ee,A.visible=ee,P.visible=ee,H.visible=ee,H.attached=!i.interactiveAndEditable,ee&&(f.geometry=null,A.geometry=null,P.geometry=null,H.geometry=e.elevationAlignedTargetLocation,v?p?(f.geometry=[[x(L),x(I)]],f.transform=y,f.color=c.toUnitRGBA(s.visibleOuterColor),H.color=c.toUnitRGBA(s.visibleInnerColor)):(f.geometry=[[x(L),x(T)]],f.transform=y,f.color=c.toUnitRGBA(s.occludedOuterColor),A.geometry=[[x(T),x(I)]],A.transform=y,H.color=c.toUnitRGBA(s.occludedInnerColor)):(P.geometry=[[x(L),x(I)]],P.transform=y,H.color=c.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:s}=this._configuration;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const t=this._computationHandles;if(t.has(e))return;const i=this._createLineOfSightVisualization();t.add([O(()=>this._getLineOfSightVisualizationDependencies(e),s=>this._updateLineOfSightVisualization(e,i,s),{sync:!0,initial:!0,equals:Ge}),Ne(()=>this._destroyLineOfSightVisualization(i))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return Ce(()=>this.analysisViewData.computations,"change",e=>this._onComputationsCollectionChange(e),{sync:!0,onListenerAdd:e=>{for(const t of e)this._connectComputation(t)},onListenerRemove:e=>{for(const t of e)this._disconnectComputation(t)}})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_createObserverVisualization(){const e=c.toUnitRGBA(this._configuration.visibleInnerColor),t=new Ae({view:this.view,attached:!1,color:e,...ke});this._observerVisualElement=t,this.own(O(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:s,visible:r})=>{h(i)||s||!r?t.attached=!1:(t.geometry=i,this._observerVisualElement.attached=!0)},ft))}};n([o({constructOnly:!0})],D.prototype,"analysis",void 0),n([o({constructOnly:!0})],D.prototype,"analysisViewData",void 0),n([o({constructOnly:!0})],D.prototype,"view",void 0),n([o({readOnly:!0})],D.prototype,"visible",null),n([o()],D.prototype,"interactiveAndEditable",null),n([o()],D.prototype,"testInfo",null),n([o()],D.prototype,"_configuration",null),D=n([V("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],D);const ke={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},xt=m(),Ft=m(),Gt=m(),Nt=bt();let w=class extends Ct(xe.EventedMixin(R)){constructor(e){super(e),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new je,this.elevationAlignedObserver=null,this.configuration=new $,this.observerEngineLocation=m(),this.cursorTarget=null,this.editable=!0}initialize(){const e=this.view,t=this.analysis;this._analysisController=new b({analysis:t,analysisViewData:this,view:e}),this._analysisVisualization=new D({analysis:t,analysisViewData:this,view:e}),this.own([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),St(this,C)])}destroy(){Vt(this),this._analysisController=E(this._analysisController),this._analysisVisualization=E(this._analysisVisualization)}get results(){return this.computations.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return u(this._analysisController)&&this._analysisController.updating}getResultForTarget(e){const t=this.computations.find(i=>i.target===e);return Ue(t,i=>i.result)}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};n([o({readOnly:!0})],w.prototype,"type",void 0),n([o({constructOnly:!0,nonNullable:!0})],w.prototype,"analysis",void 0),n([o()],w.prototype,"tool",void 0),n([o({readOnly:!0})],w.prototype,"results",null),n([o()],w.prototype,"priority",null),n([o()],w.prototype,"computations",void 0),n([o()],w.prototype,"elevationAlignedObserver",void 0),n([o()],w.prototype,"configuration",void 0),n([o()],w.prototype,"observerEngineLocation",void 0),n([o()],w.prototype,"cursorTarget",void 0),n([o()],w.prototype,"updating",null),n([o()],w.prototype,"editable",void 0),n([o()],w.prototype,"_analysisController",void 0),n([o()],w.prototype,"_analysisVisualization",void 0),w=n([V("esri.views.3d.analysis.LineOfSightAnalysisView3D")],w);const Yt=w;export{Yt as default};
