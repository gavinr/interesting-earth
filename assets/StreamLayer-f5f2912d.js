import{ai as t,aj as r,al as b,c8 as T,f5 as F,a_ as I,aq as d,cn as P,hb as u,b3 as D,aF as _,f2 as h,aM as k,bB as O,cf as E,hc as C,bl as N,fc as f,cD as U,ce as g,ba as A}from"./index-4b03b1b0.js";import"./UniqueValueRenderer-ad13318a.js";import{o as L,a as M,n as G}from"./jsonUtils-dc7d3627.js";import{O as J}from"./MultiOriginJSONSupport-d720758b.js";import{l as V}from"./ArcGISService-163e63f0.js";import{a as z}from"./BlendLayer-08a76f1b.js";import{o as q}from"./CustomParametersMixin-64be6818.js";import{p as W}from"./FeatureEffectLayer-142ba535.js";import{n as Q}from"./FeatureReductionLayer-b84a7e30.js";import{c as B}from"./OperationalLayer-5b164959.js";import{j as H}from"./PortalLayer-473e8b12.js";import{t as K}from"./ScaleRangeLayer-31eefac8.js";import{a as X}from"./TemporalLayer-5e4b9999.js";import{m as Y,c as Z,D as ee,I as te,p as ie,l as re,f as oe}from"./commonProperties-1e64caff.js";import{v as se}from"./featureLayerUtils-ce39121a.js";import{s as ne}from"./fieldProperties-ff8bee5a.js";import{C as ae}from"./LabelClass-3b8bddeb.js";import{i as pe}from"./labelingInfo-66d1a5d0.js";import{t as le}from"./styleUtils-5fb07ac6.js";import{b as de}from"./Query-cdee9722.js";import{p as me}from"./popupUtils-8d4c7bed.js";import{h as ce}from"./ElevationInfo-f714f054.js";import"./ColorStop-0686847d.js";import"./diffUtils-3c37f4e6.js";import"./colorRamps-54548a9c.js";import"./DictionaryLoader-b0bde137.js";import"./FieldsIndex-06c42f48.js";import"./heatmapUtils-fe1f2bfa.js";import"./jsonUtils-555359b4.js";import"./FeatureEffect-82bb4002.js";import"./FeatureFilter-e71c77dc.js";import"./portalItemUtils-89a0d48a.js";import"./sql-a39124b8.js";import"./AttachmentQuery-dd62ce87.js";import"./RelationshipQuery-ab8c76dd.js";import"./defaults-d003668a.js";import"./defaultsJSON-59981e75.js";var y;let p=y=class extends T{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};t([r({type:Number,json:{write:!0}})],p.prototype,"age",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"ageReceived",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"displayCount",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"maxObservations",void 0),p=y=t([b("esri.layers.support.PurgeOptions")],p);const S=p,v=ne();function w(e,o){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let i=class extends Q(W(z(X(K(F(V(B(H(J(q(A))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new S,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=I.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(P).then(()=>this._fetchService(o))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){u(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){var n;o=o.layerDefinition||o;const a=(n=o.drawingInfo)==null?void 0:n.renderer;if(a){const l=L(a,o,s)||void 0;return l||D.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),l}return se(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([_(()=>import("./createConnection-cea53b95.js"),["./createConnection-cea53b95.js","./index-4b03b1b0.js","./index-0de4b476.css","./query-af06498b.js","./normalizeUtils-1bd513d6.js","./normalizeUtilsCommon-a78292a0.js","./pbfQueryUtils-8c741d64.js","./pbf-18997bde.js","./queryZScale-2a8227ea.js","./Query-cdee9722.js"],import.meta.url),this.load()]),s=this.geometryType?h.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:l=null,maxReconnectionAttempts:x=0,maxReconnectionInterval:R=20,spatialReference:$=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,$,s,{geometry:l,where:n},x,R,a??void 0),j=k([this.on("send-message-to-socket",c=>m.sendMessageToSocket(c)),this.on("send-message-to-client",c=>m.sendMessageToClient(c))]);return m.once("destroy",j.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return me(this,e)}createQuery(){const e=new de;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some(a=>(a.name===e&&(s=a.domain),!!s)),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}write(e,o){const s=o==null?void 0:o.messages;return this.webSocketUrl?(s==null||s.push(w(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s==null||s.push(w(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var o,s,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await O(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((o=this.timeInfo)!=null&&o.trackIdField))throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(s=this.fields.find(l=>l.type==="oid"))==null?void 0:s.name;if(!n)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new E({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),u(this.renderer,this.fieldsIndex),C(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),le(this,{origin:"service"})}};t([r({type:String})],i.prototype,"copyright",void 0),t([r({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([r({type:String})],i.prototype,"displayField",void 0),t([r({type:ce})],i.prototype,"elevationInfo",void 0),t([r({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([r(v.fields)],i.prototype,"fields",void 0),t([r(v.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([r({type:N,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([r({type:h.apiValues,json:{read:{reader:h.read}}})],i.prototype,"geometryType",void 0),t([r(Y)],i.prototype,"labelsVisible",void 0),t([r({type:[ae],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:pe},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],i.prototype,"labelingInfo",void 0),t([r(Z)],i.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],i.prototype,"listMode",void 0),t([r({type:f})],i.prototype,"maxReconnectionAttempts",void 0),t([r({type:f})],i.prototype,"maxReconnectionInterval",void 0),t([r(ee)],i.prototype,"maxScale",void 0),t([r(te)],i.prototype,"minScale",void 0),t([r({type:String})],i.prototype,"objectIdField",void 0),t([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([r(ie)],i.prototype,"popupEnabled",void 0),t([r({type:U,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([r({type:S})],i.prototype,"purgeOptions",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([r({types:M,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:G,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([g("service","renderer",["drawingInfo.renderer","defaultSymbol"]),g("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([r(re)],i.prototype,"screenSizePerspectiveEnabled",void 0),t([r()],i.prototype,"sourceJSON",void 0),t([r({type:I,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([r({json:{read:!1}})],i.prototype,"type",void 0),t([r(oe)],i.prototype,"url",void 0),t([r({type:Number})],i.prototype,"updateInterval",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([r({type:String})],i.prototype,"webSocketUrl",void 0),i=t([b("esri.layers.StreamLayer")],i);const Ke=i;export{Ke as default};
